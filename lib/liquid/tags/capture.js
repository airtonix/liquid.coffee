// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = function(Liquid) {
    var Capture;
    Capture = (function(_super) {
      __extends(Capture, _super);

      Capture.prototype.tagSyntax = /(\w+)/;

      function Capture(tagName, markup, tokens) {
        var parts;
        parts = markup.match(this.tagSyntax);
        if (parts) {
          this.to = parts[1];
        } else {
          throw "Syntax error in 'capture' - Valid syntax: capture [var]";
        }
        Capture.__super__.constructor.call(this, tagName, markup, tokens);
      }

      Capture.prototype.render = function(context) {
        var output;
        output = Capture.__super__.render.call(this, context);
        context.set(this.to, Liquid.Utils.flatten([output]).join(""));
        return "";
      };

      return Capture;

    })(Liquid.Block);
    return Liquid.Template.registerTag("capture", Capture);
  };

}).call(this);
