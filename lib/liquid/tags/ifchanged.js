// Generated by CoffeeScript 1.6.3
(function() {
  var Liquid, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Liquid = require('../../liquid');

  Liquid.Tags.IfChanged = (function(_super) {
    __extends(IfChanged, _super);

    function IfChanged() {
      _ref = IfChanged.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    IfChanged.prototype.render = function(context) {
      var output,
        _this = this;
      output = "";
      context.stack(function() {
        output = _this.renderAll(_this.nodelist, context).join('');
        if (output !== context.registers.ifchanged) {
          return context.registers.ifchanged = output;
        } else {
          return output = '';
        }
      });
      return output;
    };

    return IfChanged;

  })(Liquid.Block);

  Liquid.Template.registerTag("ifchanged", Liquid.Tags.IfChanged);

}).call(this);
