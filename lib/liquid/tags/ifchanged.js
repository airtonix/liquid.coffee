// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = function(Liquid) {
    var IfChanged, _ref;
    IfChanged = (function(_super) {
      __extends(IfChanged, _super);

      function IfChanged() {
        _ref = IfChanged.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      IfChanged.prototype.render = function(context) {
        var output,
          _this = this;
        output = "";
        context.stack(function() {
          var results;
          results = _this.renderAll(_this.nodelist, context).join("");
          if (results !== context.registers["ifchanged"]) {
            output = results;
            return context.registers["ifchanged"] = output;
          }
        });
        return output;
      };

      return IfChanged;

    })(Liquid.Block);
    return Liquid.Template.registerTag("ifchanged", IfChanged);
  };

}).call(this);
