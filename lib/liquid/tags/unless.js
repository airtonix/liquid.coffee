// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = function(Liquid) {
    var Unless, _ref;
    Unless = (function(_super) {
      __extends(Unless, _super);

      function Unless() {
        _ref = Unless.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Unless.prototype.render = function(context) {
        var output,
          _this = this;
        output = "";
        context.stack(function() {
          var block, i;
          block = _this.blocks[0];
          if (!block.evaluate(context)) {
            output = _this.renderAll(block.attachment, context);
            return;
          }
          i = 1;
          while (i < _this.blocks.length) {
            block = _this.blocks[i];
            if (block.evaluate(context)) {
              output = _this.renderAll(block.attachment, context);
              return;
            }
            i++;
          }
        });
        return Liquid.Utils.flatten([output]).join("");
      };

      return Unless;

    })(Liquid.Tags.If);
    return Liquid.Template.registerTag("unless", Unless);
  };

}).call(this);
